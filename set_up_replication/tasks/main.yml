---
  - name: Check if there's anything in postgres data directory
    ansible.builtin.command: ls "{{ postgres_data_dir }}"
    register: ls_output
  - name: Initialize db
    ansible.builtin.command: "{{ postgres_setup_bin }} initdb"
    when: ls_output.stdout == ""
  - name: Start and enable postgres
    ansible.builtin.service:
      name: "{{ postgres_service }}"
      state: started
      enabled: yes
  - name: Copy postgresql.conf
    ansible.builtin.template:
      src: postgresql.conf.j2
      dest: "{{ postgres_data_dir }}/postgresql.conf"
      owner: postgres
      group: postgres
      mode: u+rw
  # Ansible throws an authentication error if it's not changed, even though become_user is used when creating a replication user 
  - name: Change postgres auth method on postgres-primary
    ansible.builtin.replace: 
      path: "{{ postgres_data_dir }}/pg_hba.conf"
      regexp: 'peer'
      replace: 'trust'
    when: inventory_hostname == "postgres-primary"
  - name: Restart postgres
    ansible.builtin.service:
      name: "{{ postgres_service }}"
      state: restarted
  - name: Create replication user on postgres-primary
    become_user: postgres
    community.postgresql.postgresql_user:
      name: replicator
      password: '{{ replicator_password }}'
      role_attr_flags: REPLICATION
    when: inventory_hostname == "postgres-primary"
  - name: Copy pg_hba.conf
    ansible.builtin.template:
      src: pg_hba.conf.j2
      dest: "{{ postgres_data_dir }}/pg_hba.conf"
      owner: postgres
      group: postgres
      mode: u+rw
    when: inventory_hostname == "postgres-primary"   
  - name: Restart primary postgres
    ansible.builtin.service:
      name: "{{ postgres_service }}"
      state: restarted 
    when: inventory_hostname == "postgres-primary"
  - name: Remove postgres data directory on postgres-standby
    ansible.builtin.file:
      path: "{{ postgres_data_dir }}"
      state: absent
    when: inventory_hostname == "postgres-standby"
  - name: Copy data from primary to standby
    become_user: postgres
    ansible.builtin.expect:
      command: >
        /usr/bin/pg_basebackup -h {{ hostvars["postgres-primary"]["ansible_default_ipv4"]["address"] }} 
        -U replicator -p 5432 -D {{ postgres_data_dir }} -R -Xs -P
      responses:
        '.*Password*': '{{ replicator_password }}'
    no_log: true
    when: inventory_hostname == "postgres-standby"
  - name: Change data directory owner
    ansible.builtin.file:
      path: "{{ postgres_data_dir }}"
      state: directory
      recurse: yes
      owner: postgres
      group: postgres
    when: inventory_hostname == "postgres-standby"    
  - name: Restart postgres
    ansible.builtin.service:
      name: "{{ postgres_service }}"
      state: restarted
    when: inventory_hostname == "postgres-standby"  

